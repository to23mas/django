"""
Django settings for inpv project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-rs%!p@c7--xcb4gf^zfgbt%#j$^eujdzhp+bausw)0(n_7p7yl"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
SECURE_SSL_REDIRECT = False

ALLOWED_HOSTS = ['*', '127.0.0.1',  'localhost', '161.35.25.166' ]
CSRF_TRUSTED_ORIGINS = ['http://localhost', 'https://localhost', 'http://161.35.25.166', 'https://161.35.25.166']
X_FRAME_OPTIONS = "SAMEORIGIN"
SESSION_COOKIE_SAMESITE = None  # Allow session cookies in iframes
SESSION_COOKIE_SECURE = False   # Change to True if using HTTPS



# Application definition
INSTALLED_APPS = [
	"daphne",
	"channels",
	"django.contrib.admin",
	"django.contrib.auth",
	"django.contrib.contenttypes",
	"django.contrib.sessions",
	"django.contrib.messages",
	"django.contrib.staticfiles",

	'projects',
	'lessons',
	'user_progress',
	'courses',
	'tests',
	'content',
	'demos',
	'users'
]

ASGI_APPLICATION = 'inpv.asgi.application'
CHANNEL_LAYERS = {
	"default": {
		"BACKEND": "channels_redis.core.RedisChannelLayer",
		"CONFIG": {
			"hosts": [("redis", 6379)],
		},
	},
}

MIDDLEWARE = [
	"django.middleware.security.SecurityMiddleware",
	"django.contrib.sessions.middleware.SessionMiddleware",
	"django.middleware.common.CommonMiddleware",
	"django.middleware.csrf.CsrfViewMiddleware",
	"django.contrib.auth.middleware.AuthenticationMiddleware",
	'middleware.student_group_check.GroupCheckMiddleware',
	"django.contrib.messages.middleware.MessageMiddleware",
	"django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "inpv.urls"

TEMPLATES = [
	{
		"BACKEND": "django.template.backends.django.DjangoTemplates",
		"DIRS": [
			BASE_DIR / 'courses/templates',
			BASE_DIR / 'users/templates',
			BASE_DIR / 'projects/templates',
			BASE_DIR / 'lessons/templates',
			BASE_DIR / 'user_progress/templates',
			BASE_DIR / 'tests/templates',
			BASE_DIR / 'demos/templates',
			BASE_DIR / 'content/templates',
			BASE_DIR / 'templates/admin',
			BASE_DIR / 'content/templates',
			BASE_DIR / 'templates',
		],
		"APP_DIRS": True,
		"OPTIONS": {
			"context_processors": [
				"django.template.context_processors.debug",
				"django.template.context_processors.request",
				"django.contrib.auth.context_processors.auth",
				"django.contrib.messages.context_processors.messages",
			],
		},
	},
]

WSGI_APPLICATION = "inpv.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

if 'test' in sys.argv:
	# Use SQLite3 for tests
	DATABASES = {
		"default": {
			"ENGINE": "django.db.backends.sqlite3",
			"NAME": BASE_DIR / "test_db.sqlite3",
		}
	}
else:
	# Use PostgreSQL for development/production
	DATABASES = {
		"default": {
			"ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.postgresql"),
			"NAME": os.environ.get("SQL_DATABASE", "inpv"),
			"USER": os.environ.get("SQL_USER", "user"),
			"PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
			"HOST": os.environ.get("SQL_HOST", "localhost"),
			"PORT": os.environ.get("SQL_PORT", "5432"),
		}
	}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
		'OPTIONS': {
			'user_attributes': ('username', 'first_name', 'last_name', 'email'),
		}
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
		'OPTIONS': {
			'min_length': 8,
		}
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
	BASE_DIR / 'public/',
	BASE_DIR / 'src/public/',
	BASE_DIR / 'src/demos/static',
	BASE_DIR / 'src/public/static',
]

STATIC_ROOT = BASE_DIR / 'public' / 'root'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/users/login/'
LOGOUT_REDIRECT_URL = '/users/login/'

# VALIDATOR
VALIDATOR_DIR = os.environ.get("VALIDATOR_DIR")


#FORM translations

