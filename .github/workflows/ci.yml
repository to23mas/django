name: CI

on:
  push:
  pull_request:

jobs:
  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app-frontend

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'app-frontend/package-lock.json'

    - name: Install Dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint

  pylint:
    name: Run PyLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: './requirements.txt'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r ../requirements.txt
        
    - name: Run PyLint
      run: |
        if [ -f ../.pylintrc ]; then
          pylint --rcfile=../.pylintrc **/*.py
        else
          echo "Warning: .pylintrc not found, using default configuration"
          pylint **/*.py
        fi

  django-tests:
    name: Run Django Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: './requirements.txt'

    - name: Copy .env.local to .env
      run: |
        if [ -f ../.env.local ]; then
          cp ../.env.local .env
          echo ".env.local file copied to .env"
        else
          echo "Warning: .env.local file not found"
          exit 1
        fi

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ../requirements.txt

    - name: Run Tests
      run: |
        python manage.py test -v 2

  docker:
    name: Docker Compose Build
    needs: [eslint, pylint, django-tests]  # Now waits for tests too
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Copy .env.local to .env
      run: |
        if [ -f .env.local ]; then
          cp .env.local .env
          echo ".env.local file copied to .env"
        else
          echo "Warning: .env.local file not found"
          exit 1
        fi

    - name: Build with Docker Compose
      run: |
        docker compose build
        docker compose up -d
        
    - name: Check running containers
      run: docker compose ps
      
    - name: Check container logs
      run: docker compose logs
      
    - name: Clean up
      if: always()
      run: docker compose down 