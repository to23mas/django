"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-*$#_ot57&p^u%*qy0g-5sjw#6=k4d@ujw=u+axf**q@002kqmr"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "hello_world",
    "homepage",
    "habit_tracker_1",
    "habit_tracker_2",

    "blog_1",
    "tailwind",
    "theme",
    "django_browser_reload",
    "users",
    "birthdays",
    "django_crontab",
    "chat",

    'library_rest',
]

ASGI_APPLICATION = "app.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("redis", 6379)],
        },
    },
}

LOGIN_URL = '/users/login/'
REGISTER_URL = '/users/register/'
LOGOUT_REDIRECT_URL = '/users/login/'
LOGIN_REDIRECT_URL = '/'


TAILWIND_APP_NAME = 'theme'

INTERNAL_IPS = [
    "127.0.0.1",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "middleware.custom.LoginRequiredMiddleware",
    "middleware.custom.Redirect404Middleware",
    # "django_browser_reload.middleware.BrowserReloadMiddleware",
]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
	"default": {
		"ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
		"NAME": os.environ.get("DATABASE", BASE_DIR / "db.sqlite3"),
		"USER": os.environ.get("DATABASE_USER", "user"),
		"PASSWORD": os.environ.get("DATABASE_PASSWORD", "password"),
		"HOST": os.environ.get("DATABASE_HOST", "localhost"),
		"PORT": os.environ.get("DATABASE_PORT", "5432"),
	}
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Update this based on your email provider
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', '')  # Your email
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', '')  # Your email password or app password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Crontab settings
CRONJOBS = [
    # ('0 0 * * *', 'birthdays.cron.send_birthday_emails'),  # Daily at midnight
    # ('* * * * *', 'birthdays.cron.test_cron_job'),  # Every minute
    # ('0 0 * * *', 'birthdays.cron.check_nameday'),  # Daily at midnight - check name days
    # ('* * * * *', 'birthdays.cron.test_mail'),  # Every minute - send test mail
]
CRONTAB_COMMAND_SUFFIX = '>> /var/log/cron.log 2>&1'  # Log output to file























